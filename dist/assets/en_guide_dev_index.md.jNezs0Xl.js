import{_ as s,c as i,o as n,V as a}from"./chunks/framework.qijW_vQ_.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/dev/index.md","filePath":"en/guide/dev/index.md"}'),e={name:"en/guide/dev/index.md"},t=a(`<h2 id="plugin-development" tabindex="-1">Plugin Development <a class="header-anchor" href="#plugin-development" aria-label="Permalink to &quot;Plugin Development&quot;">​</a></h2><p>CthulhuRs has a built-in quickjs engine, which allows users to write custom script files to control the behavior of CthulhuRs.<br> You only need to write a <code>plugin.json</code>, and then run</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cthulhu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install ./</span></span></code></pre></div><p>Then, according to the description in <code>plugin.json</code>, you can install a plugin for your own CthulhuRs Server.</p><p><strong><code>plugin.json</code>示例</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CthulhuJs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;intro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CthulhuJs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./logo.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;web&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./home&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.html&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;permissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;netMonitor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;netModify&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;matches&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./main.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;contents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;./contents/window.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;worker&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./worker.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dynamic_links&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;scope.browser.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="explanation-of-all-fields" tabindex="-1">Explanation of all fields <a class="header-anchor" href="#explanation-of-all-fields" aria-label="Permalink to &quot;Explanation of all fields&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>name        : Specifies the name of the plugin (required)  </span></span>
<span class="line"><span>version     : Specifies the version of the plugin  </span></span>
<span class="line"><span>intro       : Introduction of the plugin  </span></span>
<span class="line"><span>logo        : Logo image of the plugin  </span></span>
<span class="line"><span>web         : The web of the plugin, which can be inserted into the page with CthulhuRs to interact with the user    </span></span>
<span class="line"><span>    root            : The root directory of the web. When accessing https://&lt;plugin ID&gt;.plugin.cthulhu.server/, it will be mapped to this directory</span></span>
<span class="line"><span>    index           : The home document of the web (with the path specified by web.root as the main path), maps the path / to the specified document file xxx.html </span></span>
<span class="line"><span>permissions : The permission flag of the plugin</span></span>
<span class="line"><span>    netMonitor      : When true, the server-side script of the plugin can use the three network monitoring APIs server.watchRequset, server.watchResponse, server.watchMessage</span></span>
<span class="line"><span>    netModify       : When the value is greater than 0, the server-side script of the plugin can use the three network modification APIs server.onRequset, server.onResponse, server.onMessage</span></span>
<span class="line"><span>matches     : When the domain name does not match the expressions in the array, it will not be processed by the server and will be directly released</span></span>
<span class="line"><span>script      : Configure the scripts of various environments of the plugin</span></span>
<span class="line"><span>    server          : Specifies the server-side script file of the plugin</span></span>
<span class="line"><span>    contents        : The specified js files will all be injected into the head of the webpage</span></span>
<span class="line"><span>    worker          : When the webpage injects Worker through a link, the specified js file will be injected into the head of its js file. For example, when the webpage injects the ServiceWorker of /sw.js, the CthulhuRs server will intercept the sw.js file and then write the specified worker js file of the plugin into the head of sw.js</span></span>
<span class="line"><span>    dynamic_links   : The paths in the array will form a link (https://&lt;plugin ID&gt;.plugin.cthulhu.server/dynamic/&lt;link&gt;), injected into the head of the webpage and the worker environment. The server-side script can use the api server.dynamicScript to return dynamic js content to the specified link, and the execution priority is higher than content</span></span></code></pre></div>`,8),p=[t];function l(h,o,r,k,d,c){return n(),i("div",null,p)}const g=s(e,[["render",l]]);export{E as __pageData,g as default};
